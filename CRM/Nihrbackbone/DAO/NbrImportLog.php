<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from /var/www/html/nbrdev/sites/default/files/civicrm/ext/nihrbackbone/xml/schema/CRM/Nihrbackbone/NbrImportLog.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:c3ed4031e68732c4ed00f62c7797f3f8)
 */

/**
 * Database access object for the NbrImportLog entity.
 */
class CRM_Nihrbackbone_DAO_NbrImportLog extends CRM_Core_DAO {

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_nbr_import_log';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Unique NbrImportLog ID
   *
   * @var int
   */
  public $id;

  /**
   * Unique ID of the import job
   *
   * @var string
   */
  public $import_id;

  /**
   * Name of the import file that is being logged
   *
   * @var string
   */
  public $filename;

  /**
   * Type of message (info, warning, error)
   *
   * @var string
   */
  public $message_type;

  /**
   * Message
   *
   * @var text
   */
  public $message;

  /**
   * The date the message was logged
   *
   * @var date
   */
  public $logged_date;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_nbr_import_log';
    parent::__construct();
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => CRM_Nihrbackbone_ExtensionUtil::ts('Unique NbrImportLog ID'),
          'required' => TRUE,
          'where' => 'civicrm_nbr_import_log.id',
          'table_name' => 'civicrm_nbr_import_log',
          'entity' => 'NbrImportLog',
          'bao' => 'CRM_Nihrbackbone_DAO_NbrImportLog',
          'localizable' => 0,
        ],
        'import_id' => [
          'name' => 'import_id',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => CRM_Nihrbackbone_ExtensionUtil::ts('Unique import ID'),
          'description' => CRM_Nihrbackbone_ExtensionUtil::ts('Unique ID of the import job'),
          'maxlength' => 32,
          'size' => CRM_Utils_Type::MEDIUM,
          'where' => 'civicrm_nbr_import_log.import_id',
          'table_name' => 'civicrm_nbr_import_log',
          'entity' => 'NbrImportLog',
          'bao' => 'CRM_Nihrbackbone_DAO_NbrImportLog',
          'localizable' => 0,
        ],
        'filename' => [
          'name' => 'filename',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => CRM_Nihrbackbone_ExtensionUtil::ts('File Name'),
          'description' => CRM_Nihrbackbone_ExtensionUtil::ts('Name of the import file that is being logged'),
          'maxlength' => 128,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'civicrm_nbr_import_log.filename',
          'table_name' => 'civicrm_nbr_import_log',
          'entity' => 'NbrImportLog',
          'bao' => 'CRM_Nihrbackbone_DAO_NbrImportLog',
          'localizable' => 0,
        ],
        'message_type' => [
          'name' => 'message_type',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => CRM_Nihrbackbone_ExtensionUtil::ts('Message Type'),
          'description' => CRM_Nihrbackbone_ExtensionUtil::ts('Type of message (info, warning, error)'),
          'maxlength' => 128,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'civicrm_nbr_import_log.message_type',
          'table_name' => 'civicrm_nbr_import_log',
          'entity' => 'NbrImportLog',
          'bao' => 'CRM_Nihrbackbone_DAO_NbrImportLog',
          'localizable' => 0,
        ],
        'message' => [
          'name' => 'message',
          'type' => CRM_Utils_Type::T_TEXT,
          'title' => CRM_Nihrbackbone_ExtensionUtil::ts('Message'),
          'description' => CRM_Nihrbackbone_ExtensionUtil::ts('Message'),
          'rows' => 4,
          'cols' => 60,
          'where' => 'civicrm_nbr_import_log.message',
          'table_name' => 'civicrm_nbr_import_log',
          'entity' => 'NbrImportLog',
          'bao' => 'CRM_Nihrbackbone_DAO_NbrImportLog',
          'localizable' => 0,
          'html' => [
            'type' => 'TextArea',
          ],
        ],
        'logged_date' => [
          'name' => 'logged_date',
          'type' => CRM_Utils_Type::T_DATE,
          'title' => CRM_Nihrbackbone_ExtensionUtil::ts('Date Message Logged'),
          'description' => CRM_Nihrbackbone_ExtensionUtil::ts('The date the message was logged'),
          'where' => 'civicrm_nbr_import_log.logged_date',
          'table_name' => 'civicrm_nbr_import_log',
          'entity' => 'NbrImportLog',
          'bao' => 'CRM_Nihrbackbone_DAO_NbrImportLog',
          'localizable' => 0,
          'html' => [
            'type' => 'Select Date',
            'formatType' => 'activityDate',
          ],
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'nbr_import_log', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'nbr_import_log', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
